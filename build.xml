<project name="symfony2-ci-example" basedir="." default="info">
    
  <property file="build.properties"/>


	<target name="info">
		<echo>
info - Shows this info
build - Prepares environment for deploy/dist
dist - Generates distributable package
clean - Deletes previously generated files under build/ and dist/
		</echo>
	</target>

<!--  
  *Tarea: clean
  *Descripción: Limpia la carpeta build y la carpeta de la máquina remota dónde se va a hacer deploy
-->
  <target name="clean">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}" />
  </target>
<!--  
  *Tarea: build
  *Descripción: Limpia la carpeta build y la carpeta de la máquina remota dónde se va a hacer deploy
-->

  <target name="prepare">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.src.dir}"/>
    <mkdir dir="${report.dir}"/>
    <mkdir dir="${report.dir}/code-browser"/>
  </target>

  <target name="build" depends="prepare">
    <copy todir="${build.src.dir}">
      <fileset dir="${src.dir}"/>
    </copy>

    <exec executable="php">
      <arg value="${build.src.dir}/app/console"/>
      <arg value="assets:install"/>
      <arg value="${build.src.dir}/web/"/>
    </exec>
  </target>
  
<!--  
  *Tarea: dist
  *Descripción: Crea un paquete tar.gz listo para distribuir el sistema en la carpeta /dist
-->  
  <target name="dist" depends="build">
    <mkdir dir="${dist.dir}"/>
    <tar destfile="${dist.dir}/${project.name}.tar.gz" basedir="${build.src.dir}" compression="gzip" longfile="gnu"/>
  </target>

  <target name="test" depends="build">

    <apply executable="php" failonerror="true">
      <arg value="-l" />
      <fileset dir="${build.src.dir}/src">
        <include name="**/*.php" />
      </fileset>
    </apply>

    <exec executable="phpunit" failonerror="true">
      <arg value="-c" />
      <arg path="${build.src.dir}/app/"/>
      <arg value="--log-junit" />
      <arg path="${report.dir}/phpunit.xml"/>
      <arg value="--coverage-clover" />
      <arg path=" ${report.dir}/clover.xml"/>
    </exec>
  </target>

<!--  
  *Tarea: dist
  *Descripción: Crea en buld/doc la documentación del código en formato HTML
-->  
  <target name="doc" depends="build">
    <exec executable="phpdoc">
      <arg value="-d" />
      <arg path=" ${build.src.dir}/src" />
      <arg value="-t" />
      <arg path="${doc.dir}" />
    </exec>
  </target>

  <target name="analyze" depends="phpcpd,pdepend,phpmd,phpcb,phploc,phpcs"/>

  <target name="phpcpd" depends="build">
    <exec executable="phpcpd">
      <arg value="--log-pmd" />
      <arg value="${report.dir}/cpd.xml" />
      <arg path="${build.src.dir}/src" />
    </exec>
  </target>

  <target name="pdepend" depends="build">
    <exec executable="pdepend">
      <arg value="--jdepend-xml=${report.dir}/jdepend.xml" />
      <arg value="--jdepend-chart=${report.dir}/dependencies.svg" />
      <arg value="--overview-pyramid=${report.dir}/dependencies-pyramid.svg" />
      <arg value="${build.src.dir}/src" />
    </exec>
  </target>

  <target name="phpmd" depends="build">
    <exec executable="phpmd">
      <arg path="${build.src.dir}/src" />
      <arg value="xml" />
      <arg value="codesize,design,naming,unusedcode"/>
      <arg value="--reportfile"/>
      <arg path="${report.dir}/phpmd.xml"/>
    </exec>
    </target>

  <target name="phpcb" depends="build">
    <exec executable="phpcb">
      <arg value="--log" />
      <arg path="${report.dir}" />
      <arg value="--source" />
      <arg path="${build.src.dir}/src" />
      <arg value="--output" />
      <arg path="${report.dir}/code-browser" />
    </exec>
  </target>

  <target name="phploc" depends="build">
    <exec executable="phploc">
      <arg value="--log-csv" />
      <arg value="${report.dir}/phploc.csv" />
      <arg path="${build.src.dir}/src" />
    </exec>
  </target>

  <target name="phpcs" depends="build">
    <exec executable="phpcs">
      <arg value="--report=checkstyle" />
      <arg value="--report-file=${report.dir}/checkstyle.xml" />
      <arg value="--standard=${checkstyle-rules.dir}/Symfony2" />
      <arg path="${build.src.dir}/src" />
    </exec>
  </target>
</project>